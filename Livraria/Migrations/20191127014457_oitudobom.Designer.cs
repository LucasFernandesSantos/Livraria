// <auto-generated />
using System;
using Livraria.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Livraria.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191127014457_oitudobom")]
    partial class oitudobom
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Livraria.Models.Autores", b =>
                {
                    b.Property<string>("IdAuthors")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Authors");

                    b.Property<string>("VolumeInfoIdTittle");

                    b.HasKey("IdAuthors");

                    b.HasIndex("VolumeInfoIdTittle");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Livraria.Models.Categories", b =>
                {
                    b.Property<string>("IdCategories")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ItemsId");

                    b.Property<string>("categories");

                    b.HasKey("IdCategories");

                    b.HasIndex("ItemsId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Livraria.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<string>("DataNascimento");

                    b.Property<string>("Email");

                    b.Property<int?>("EnderecoId");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<string>("Telefone");

                    b.HasKey("ClienteId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Livraria.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Localidade");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Uf");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Livraria.Models.Items", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvarageRating");

                    b.Property<int>("Quantidade");

                    b.Property<string>("Volume");

                    b.Property<string>("volumeInfoIdTittle");

                    b.HasKey("Id");

                    b.HasIndex("volumeInfoIdTittle");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Livraria.Models.Livro", b =>
                {
                    b.Property<int>("IdLivro")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PageCoutn");

                    b.Property<string>("itemsId");

                    b.HasKey("IdLivro");

                    b.HasIndex("itemsId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("Livraria.Models.VolumeInfo", b =>
                {
                    b.Property<string>("IdTittle")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("PublishedDate");

                    b.Property<string>("Publisher");

                    b.Property<string>("Title");

                    b.HasKey("IdTittle");

                    b.ToTable("VolumeInfo");
                });

            modelBuilder.Entity("Livraria.Models.Autores", b =>
                {
                    b.HasOne("Livraria.Models.VolumeInfo")
                        .WithMany("Authors")
                        .HasForeignKey("VolumeInfoIdTittle");
                });

            modelBuilder.Entity("Livraria.Models.Categories", b =>
                {
                    b.HasOne("Livraria.Models.Items")
                        .WithMany("categories")
                        .HasForeignKey("ItemsId");
                });

            modelBuilder.Entity("Livraria.Models.Cliente", b =>
                {
                    b.HasOne("Livraria.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("Livraria.Models.Items", b =>
                {
                    b.HasOne("Livraria.Models.VolumeInfo", "volumeInfo")
                        .WithMany()
                        .HasForeignKey("volumeInfoIdTittle");
                });

            modelBuilder.Entity("Livraria.Models.Livro", b =>
                {
                    b.HasOne("Livraria.Models.Items", "items")
                        .WithMany()
                        .HasForeignKey("itemsId");
                });
#pragma warning restore 612, 618
        }
    }
}
